{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","title","map","classNames","href","onClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAeaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEvE,OACE,qCACE,oBAAIO,UAAU,QAAd,mCACsBJ,EAAYK,SAGlC,sBAAK,UAAQ,gBAAb,UACE,qBAAKD,UAAU,gBAAf,SACE,6BACGP,EAAKS,KAAI,SAAAJ,GAAG,OACX,oBAEEE,UAAWG,IAAW,CACpB,YAAaL,EAAIC,KAAOH,EAAYG,KAEtC,UAAQ,MALV,SAOE,mBACEK,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,WACHX,IAAkBI,EAAIC,IACxBJ,EAAcG,IALpB,SASGA,EAAIG,SAfFH,EAAIC,WAsBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYU,iBCjDVb,EAAO,CAClB,CAAEM,GAAI,QAASE,MAAO,QAASK,QAAS,eACxC,CAAEP,GAAI,QAASE,MAAO,QAASK,QAAS,eACxC,CAAEP,GAAI,QAASE,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASf,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBe,EAAtB,KAMA,OACE,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACEP,KAAMA,EACNC,cAAeA,EACfC,cATY,SAACG,GACjBW,EAAiBX,EAAIC,UCdzBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.60e444e4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nexport type Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\nexport type Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <>\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                key={tab.id}\n                className={classNames({\n                  'is-active': tab.id === selectedTab.id,\n                })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (selectedTabId !== tab.id) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tab, Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const handleTab = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}